import java.util.Arrays;
import java.util.Scanner;

public class Bulls_and_Cows {
    Scanner scanner = new Scanner(System.in);

    private int size_arr;                       // Размер массива, в котором хранятся числа.
    private int[] arr;                          // Ссылка на массив, в котором будет хранится загаданое число.
    private int[] guess;                        // Массив, содержащий догадку пользователя.
    private  boolean win = false;               // Переменная-флажок, сигнализирующая о выйгрыше.


    /*
            Конструктор класса.
            В конструкторе реализована инициализация размера массива, и проверка допустимости введёного числа. Если
            пользователь вводит недопустимое число, выдается сообщение об ошибке. Конструктор завершит свою работу,
            когда будет введено допустимое число. Так же выделяется память под массив, и присваевается на неё ссылка.
            Затем вызывается метод fill.
            Результатом работы конструктора является массив, заполненый уникальными числамами, которые необходимо
            угадать игроку.
     */
    Bulls_and_Cows() {
        // Сервисные сообщения.
        System.out.println("\t*********Быки и коровы*********");
        System.out.println("Игра началась!");

        boolean size_true = false; // Переменная-флажок, указывающая находится ли введенное число в диапазоне.

        // Цикл, в ходе работы которого пользователь вводит число в консоль.
        // Ввод повторяется до тех пор, пока не будет введено коректное число.
        do {
            System.out.print("Введите количество цифр (от 3 до 6): ");
            size_arr = scanner.nextInt();
            if ((size_arr >= 3) && (size_arr <= 6)) {
                size_true = true;
            } else {
                System.out.println("Число вне диапазона. Повторите ввод.");
            }
        } while (!size_true);

        // Выделение помяти под массивы, в котором будет храниться загаданное число, и догадка игрока.
        arr = new int[size_arr];
        guess = new int[size_arr];

        // Заполнение массива уникальными числами.
        fill();
        System.out.println("Загадан: " + Arrays.toString(arr));
    }

    //********************************* МЕТОДЫ КЛАССА *********************************

    // Метод fill() заполняет массив arr числами от 0 до 9. Числа не повторяются.
    void fill() {
        boolean unix = true;    // Переменная-флажок, указывающая на то, что такая цифра уже не находится в массиве.
        int num;    // Переменная, в которой хранится рандомное значение.

        // Цикл, в ходе выполнения которого, заполняется массив arr.
        for (int i = 0; i < size_arr; i++) {

            // Цикл на каждом шаге которого генерируется рандомное число.
            do {
                unix = true;
                num = (int) (Math.random() * 10);
                // Если массив пуст, то сгенерированное число присваивается в первый элемент массива без проверки на
                // уникальность. В противном случае происходит проверка всех элементов до i, и если сгенерированного
                // числа нет в массиве, то оно присваивается i-му элементу массива. Если число уже есть в массиве,
                // генерируется новое. Цикл завершится тогда, когда будет сгенерировано уникальное число.
                if (i == 0) {
                    arr[i] = num;
                } else {
                    for (int j = 0; j < i; j++) {
                        if (arr[j] == num) {
                            unix = false;
                        }
                    }
                    if (unix == true) {
                        arr[i] = num;
                    }
                }
            } while (!unix);
        }
    }

    // Метод setGuess() предлогает Игроку ввести свой вариант, а затем записывает его в массив guess.
    void setGuess() {
        System.out.println("Введите вашу догадку (" + size_arr + " цифр): ");
        for (int i = 0; i < size_arr; i++) {
            guess[i] = scanner.nextInt();
        }
    }

    // Метод checkGuess() проводит сравнение двух массивов. Если число в массиве guess стоит на том же месте, что и в
    // массиве arr, счётчик быков инкрементируется. Если число из массива guess есть в массиве arr, но индексы в
    // массивах не совпадают, это корова. Если количество быков равно размеру массива, число угадано, переменная win
    // инициализируется значением true. В противном случае выводится сообщение с количеством быков и коров.
    void checkGuess() {
        int cows = 0;
        int bulls = 0;
        for (int i = 0; i < size_arr; i++) {
            for (int j = 0; j < size_arr; j++) {
                if ((guess[i] == arr[j]) && (i == j)) {
                    bulls++;
                } else if ((guess[i] == arr[j]) && (i != j)) {
                    cows++;
                }
            }
        }
        if (bulls == size_arr) {
            System.out.println("Угадал!");
            win = true;
        } else {
            System.out.println(bulls + "Б " + cows + "К");
        }
    }

    // Метод startGame запускает алгоритм игры. Метод работает до тех пор, пока не будет введён правильный вариант
    // ответа.
    void startGame(){
        while (!win){
            setGuess();
            checkGuess();
        }
    }
}
